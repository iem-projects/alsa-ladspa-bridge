IEMLADSPA is a plugin for ALSA that loads a LADSPA plugin,
and allows control with any ALSA compatible mixer, e.g. alsamixergui.


IEMLADSPA uses any multichannel LADSPA Plugin for audio processing.
It differs from similar plugins (e.g. 'alsaequal') as it will process both the
recording and the playback streams in a single callback.
Therefore, the number of channels should match the number of input channels +
the number of output channels.
E.g. a standard soundcard will have two (2) inchannels ("microphone") and
two (2) outchannels ("speaker"), which add up to four (4) channels.
The LADSPA plugin thus needs four audio in and four audio out ports.

This should allow to build echo-cancellers and similar devices via LADSPA.

INSTALL:
Download the latest version of the plugin and:

tar xvjf iemladspa-x.x.tar.bz2
cd iemladspa-x.x
make
sudo make install

DEPENDENCIES:
- LADSPA-SDK
- ALSA Development headers and alsa-lib -- you may already have it
as part of your linux distro, you can install in Debian (and derivatives, like
Ubuntu) with `sudo aptitude install libasound2-dev ladspa-sdk`

USAGE:
After installing you will have to modify your local .asoundrc alsa
configuration file, adding something like this. If you're not using
sound card 0 modify "plughw:0,0" accordingly.

ctl.ladspa {
	type iemladspa;
}

pcm.ladspa {
    type iemladspa;
    slave.pcm "hw:0,0";
}


You can adjust the control parameters of the plugin by using any alsa
mixer, e.g.:  alsamixer -D ladspa

HELP:
If you need any help just let me know, you can reach me at:
<zmoelnig@iem.at>. Please keep in mind that this is
a development release and may have bugs.

More Advanced Stuff:
If you want to try out iemladspa with other plugins the configuration
(asoundrd) structure follows:

ctl.<name> {
	type iemladspa;
	controls -- filename used to store the control settings,
					the default is $HOME/.alsaiemladspa.bin
	library -- location of the LADSPA library, the default is
					"/usr/lib/ladspa/iemladspa.so"
	module -- module name within the LADSPA library, the default
					is "iemladspa"
	inchannels -- number of input channels, the default is 2
	outchannels -- number of output channels, the default is 2
}

pcm.<name> {
	type iemladspa;
	slave.pcm -- sound card to output to, will probably have to
					be a plug since iemladspa currently only
                                        supports floating point numbers, a
                                        "plug" will convert the data type,
                                        outputting directly to hw won't;
	controls -- filename used to store the control settings,
					the default is $HOME/.alsaiemladspa.bin
	library -- location of the LADSPA library, the default is
					"/usr/lib/ladspa/iemladspa.so"
	module -- module name within the LADSPA library, the default
					is "iemladspa"
	inchannels -- number of input channels, the default is 2
	outchannels -- number of output channels, the default is 2
        format -- which sample format to use, "S16" or "FLOAT", the default is "S16"
}

iemladspa currently only supports FLOAT and S16 format. So you will probably
need to pump the data through a plug to change the format.

pcm.<name_pcm_plug>{
    type plug;
    slave.pcm <name_pcm>;
}
